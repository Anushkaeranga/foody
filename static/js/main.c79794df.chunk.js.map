{"version":3,"sources":["logo.svg","Recipe.js","Login.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calaries","image","ingredients","className","style","recepy","map","ingredient","text","src","alt","responseGoogle","response","console","log","Login","clientId","buttonText","onSuccess","onFailure","cookiePolicy","render","renderProps","onClick","disabled","App","useState","recipies","setRecipies","search","setSearch","query","setQuery","useEffect","a","GetRecipies","fetch","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","recipe","label","calories","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"8NAAe,I,4BCkBAA,EAhBA,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,YACrC,OACI,sBAAKC,UAAaC,IAAMC,OAAxB,UACI,6BAAKN,IACL,4BAAIC,IACJ,6BACKE,EAAYI,KAAI,SAAAC,GAAU,OAEvB,6BAAKA,EAAWC,YAGxB,qBAAKL,UAAYC,IAAMC,OAAQI,IAAMR,EAAOS,IAAK,S,wBCRvDC,EAAiB,SAACC,GACpBC,QAAQC,IAAIF,IAmBDG,EAhBD,WACV,OACI,8BACA,cAAC,cAAD,CACEC,SAAU,2EACVC,WAAa,QACbC,UAAYP,EACZQ,UAAYR,EACZS,aAAgB,qBAChBC,OAAQ,SAAAC,GAAW,OACjB,cAAC,IAAD,CAAcC,QAASD,EAAYC,QAASC,SAAUF,EAAYE,SAAlE,uCCiDGC,MA9Df,WAEA,IAKA,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,oBAAS,sBAAC,sBAAAC,EAAA,sDACRC,IADQ,2CAER,CAAEJ,IAEJ,IAAMI,EAAW,uCAAG,8BAAAD,EAAA,sEACKE,MAAM,mCAAD,OAAoCL,EAApC,mBAbf,WAae,oBAdd,qCAaI,cACZnB,EADY,gBAECA,EAASyB,OAFV,OAEZC,EAFY,OAGlBzB,QAAQC,IAAIwB,EAAKC,MACjBX,EAAYU,EAAKC,MAJC,2CAAH,qDAwBf,OACE,sBAAKpC,UAAU,MAAf,UACE,uBAAMqC,SAZM,SAAAC,GAChBA,EAAEC,iBACFV,EAASH,IAUwB1B,UAAU,cAAvC,UACE,uBAAOA,UAAU,aAAawC,KAAM,OAAOC,MAASf,EAAQgB,SAnB/C,SAAAJ,GACrBX,EAAUW,EAAEK,OAAOF,UAmBX,wBAAQzC,UAAU,gBAAgBwC,KAAO,SAAzC,oBACA,cAAC,EAAD,OAEF,qBAAKxC,UAAY,SAAjB,SACGwB,EAASrB,KAAI,SAAAyC,GAAM,OAClB,cAAC,EAAD,CAEAhD,MAAOgD,EAAOA,OAAOC,MACrBhD,SAAW+C,EAAOA,OAAOE,SACzBhD,MAAS8C,EAAOA,OAAO9C,MACvBC,YAAe6C,EAAOA,OAAO7C,aAJvB6C,EAAOA,OAAOC,gBC3CfE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAStC,OACP,cAAC,IAAMuC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfAa,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.c79794df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport style from './recipe.module.css';\r\nconst Recipe = ({title, calaries, image, ingredients}) =>{\r\n    return(\r\n        <div className = {style.recepy}>\r\n            <h1>{title}</h1>\r\n            <p>{calaries}</p>\r\n            <ol>\r\n                {ingredients.map(ingredient =>\r\n                (\r\n                    <li>{ingredient.text}</li>\r\n                )\r\n            ) }</ol>\r\n            <img className ={style.recepy} src= {image} alt =\"\"></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;\r\n\r\n\r\n","import React from 'react';\r\nimport {GoogleLogin} from 'react-google-login';\r\nimport GoogleButton from 'react-google-button';\r\n\r\n//google responce \r\nconst responseGoogle = (response) =>{\r\n    console.log(response);\r\n  }\r\n\r\nconst Login = () =>{\r\n    return(\r\n        <div>\r\n        <GoogleLogin \r\n          clientId =\"623446224587-m0lgj84js7ajoqj4bk150grdt2ja7vfj.apps.googleusercontent.com\"\r\n          buttonText = \"Login\"\r\n          onSuccess ={responseGoogle}\r\n          onFailure ={responseGoogle}\r\n          cookiePolicy = {'single_host_origin'}\r\n          render={renderProps => (\r\n            <GoogleButton onClick={renderProps.onClick} disabled={renderProps.disabled}>Sign in with Google</GoogleButton>\r\n    )}\r\n        />\r\n        </div>\r\n    );\r\n}\r\nexport default Login;\r\n\r\n\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, {useEffect, useState } from \"react\"; \r\nimport Recipe from './Recipe';\r\nimport GoogleLogin from 'react-google-login';\r\nimport Login from './Login';\r\nfunction App() {\r\n\r\nconst APP_KEY = \"5ffb1510c088a989e10961fd33600a48\";\r\nconst APP_ID = \"007ad4fe\";\r\n//const exRequest = \"https://api.edamam.com/search?q=chicken&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&from=0&to=3&calories=591-722&health=alcohol-free\";\r\n//const exRequest = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`;\r\n \r\nconst [recipies, setRecipies] =useState([]);\r\nconst [search, setSearch] = useState('');\r\nconst [query, setQuery] = useState('chicken');\r\n\r\nuseEffect(async () =>{\r\n  GetRecipies();\r\n},[ query]);\r\n\r\nconst GetRecipies = async () =>{\r\n  const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n  const data = await response.json();\r\n  console.log(data.hits);\r\n  setRecipies(data.hits)\r\n}\r\n\r\n//event \r\nconst updateSearch = e =>{\r\nsetSearch(e.target.value);\r\n\r\n}\r\n\r\n//\r\nconst getSearch = e =>{\r\n  e.preventDefault();\r\n  setQuery(search)\r\n // setSearch('');\r\n}\r\n//google responce \r\nconst responseGoogle = (response) =>{\r\n  console.log(response);\r\n}\r\n\r\n  return (\r\n    <div className=\"App\">  \r\n      <form onSubmit = {getSearch} className=\"search-form\">\r\n        <input className=\"search-bar\" type =\"text\" value = {search} onChange = {updateSearch}/> \r\n        <button className=\"search-button\" type = \"submit\">search</button>\r\n        <Login/>\r\n      </form>\r\n      <div className = \"recepy\">\r\n        {recipies.map(recipe =>(\r\n          <Recipe \r\n          key ={recipe.recipe.label}\r\n          title={recipe.recipe.label} \r\n          calaries ={recipe.recipe.calories}\r\n          image = {recipe.recipe.image}\r\n          ingredients = {recipe.recipe.ingredients}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recepy\":\"recipe_recepy__3898D\",\"image\":\"recipe_image__33ZMM\"};"],"sourceRoot":""}